// frontend/src/components/NoteDetail.js

import React, { useState, useEffect } from 'react';
import { useParams, Link } from 'react-router-dom';
import ReactMarkdown from 'react-markdown';
import { noteApi } from '../services/api';

const NoteDetail = () => {
  const { id } = useParams();
  const [note, setNote] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchNote = async () => {
      try {
        setLoading(true);
        const response = await noteApi.getNote(id);
        setNote(response.data);
      } catch (err) {
        setError('Failed to load note. Please try again later.');
        console.error('Error fetching note:', err);
      } finally {
        setLoading(false);
      }
    };

    fetchNote();
  }, [id]);

  if (loading) {
    return (
      <div className="flex justify-center items-center h-64">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-500"></div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="max-w-3xl mx-auto px-4 py-8">
        <div className="text-center">
          <div className="text-red-600 mb-4">{error}</div>
          <Link to="/notes" className="text-indigo-600 hover:text-indigo-800">
            Back to Notes
          </Link>
        </div>
      </div>
    );
  }

  if (!note) return null;

  return (
    <div className="max-w-4xl mx-auto px-4 py-8">
      {/* Header */}
      <div className="mb-8">
        <div className="flex items-center justify-between">
          <h1 className="text-3xl font-bold text-gray-900">{note.title}</h1>
          <Link
            to="/notes"
            className="text-indigo-600 hover:text-indigo-800"
          >
            Back to Notes
          </Link>
        </div>
        
        {/* Metadata */}
        <div className="mt-4 flex flex-wrap gap-4 text-sm text-gray-600">
          <div className="flex items-center">
            <span className="font-medium">Topic:</span>
            <span className="ml-2">{note.topic}</span>
          </div>
          <div className="flex items-center">
            <span className="font-medium">Level:</span>
            <span className="ml-2">{note.level}</span>
          </div>
          <div className="flex items-center">
            <span className="font-medium">Learning Style:</span>
            <span className="ml-2">{note.learning_style}</span>
          </div>
          <div className="flex items-center">
            <span className="font-medium">Created:</span>
            <span className="ml-2">
              {new Date(note.created_at).toLocaleDateString()}
            </span>
          </div>
        </div>
      </div>

      {/* Content */}
      <div className="bg-white rounded-lg shadow-md p-6 mb-8">
        <div className="prose prose-indigo max-w-none">
          <ReactMarkdown>{note.content}</ReactMarkdown>
        </div>
      </div>

      {/* Additional Information */}
      {note.metadata && Object.keys(note.metadata).length > 0 && (
        <div className="bg-gray-50 rounded-lg p-6">
          <h2 className="text-lg font-semibold text-gray-900 mb-4">
            Additional Information
          </h2>
          <dl className="grid grid-cols-1 gap-4 sm:grid-cols-2">
            {Object.entries(note.metadata).map(([key, value]) => (
              <div key={key}>
                <dt className="font-medium text-gray-600">
                  {key.charAt(0).toUpperCase() + key.slice(1)}
                </dt>
                <dd className="mt-1 text-gray-900">
                  {typeof value === 'object' ? JSON.stringify(value) : value}
                </dd>
              </div>
            ))}
          </dl>
        </div>
      )}
    </div>
  );
};

export default NoteDetail;